
- hosts: localhost
  tasks:

  - name: Configure apt key for third-party Postgres repository
    apt_key:
      id=ACCC4CF8 url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc

  - name: Configure apt key for third-party Node.js repository
    apt_key:
      id=68576280 url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key

  - name: Configure apt repositories
    apt_repository: repo={{ item }}
    with_items:
      - 'deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main'
      - 'deb https://deb.nodesource.com/node_0.10 precise main'

  - name: Install Ubuntu packages
    apt: name={{ item }}
    with_items:
      - git-core
      - libpq-dev
      - make
      - nodejs
      - postgresql-9.3
      - postgresql-client-9.3
      - postgresql-server-dev-9.3
      - python-dev
      - python-pip
      - python-psycopg2

  - name: Give the vagrant user permission to database
    postgresql_user: name=vagrant role_attr_flags=SUPERUSER
    become: yes
    become_user: postgres

  - name: Upgrade virtualenv to latest version
    shell: '[ -x /usr/local/bin/virtualenv ] || pip install -U virtualenv'

  - name: Install app dependencies in a virtualenv
    pip:
      requirements=/vagrant/requirements/dev.txt
      virtualenv=/home/vagrant
      extra_args='--trusted-host dist.pinaxproject.com'
    become: yes
    become_user: vagrant

  - name: Make "vagrant" shell auto-activate the virtual environment
    lineinfile:
      dest=/home/vagrant/.bashrc
      line='source $HOME/bin/activate'

  - name: Copy settings file
    copy:
      src=/vagrant/pycon/settings/local.py-example
      dest=/tmp/local.py
      owner=vagrant group=vagrant

  - name: Activate developer settings
    lineinfile:
      dest=/tmp/local.py
      regexp='^#from .dev'
      line='from .dev import *'
  
  - name: Transfer temp settings file
    shell: mv /tmp/local.py /vagrant/pycon/settings/local.py

  - name: Install an ancient version of the LESS compiler for CSS
    command: npm install -g less@1.3.3

  - name: Supply an informative message of the day
    copy: src=/vagrant/develop/motd dest=/etc/motd

  - name: Make psql willing to print UTF-8 strings
    copy: src=/vagrant/develop/dot-psqlrc dest=/home/vagrant/.psqlrc owner=vagrant

  - name: Create pycon-prod database role to avoid errors during prod import
    become: yes
    become_user: postgres
    postgresql_user: db=template1 name=pycon-prod

  - name: Create application database "pycon2016"
    become: yes
    become_user: postgres
    register: database_creation
    postgresql_db: name=pycon2016
                   encoding=UTF8
                   lc_collate=en_US.UTF-8
                   lc_ctype=en_US.UTF-8
                   template=template0

  - name: Migrate the application database if we just created it
    become: yes
    become_user: vagrant
    when: database_creation | changed
    shell: /home/vagrant/bin/python manage.py migrate
           chdir=/vagrant

  - name: Load database data from fixtures if we just created it
    become: yes
    become_user: vagrant
    when: database_creation | changed
    shell: /home/vagrant/bin/python manage.py loaddata fixtures/*
           chdir=/vagrant
